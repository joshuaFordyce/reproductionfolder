# 1. Find and Replace <your-name> with your name seperated with a dash (ex. kyle-payne).
# 2. Replace <your_dbs_endpoint> with your RDS instance endpoint 
#    (AWS ex. kyle-payne-bootcamp.cs8j7iukogcy.us-east-2.rds.amazonaws.com)
#    (Azure ex. kyle-payne-bootcamp.postgres.database.azure.com)

# Name of the k8s Secret holding the Starburst License file
starburstPlatformLicense: starburstdata

# The enviroment setting is what you'll see on the main Web UI for the ENVIRONMENT name.
# The sharedSecret is not a k8s Secret it is what the coordinator and worker will use
# to confirm internal communications. More can be found in the SEP doc on this.
environment: joshua-fordyce-lab01
sharedSecret: u70Qhhw9PsZmEgIo7Zqg3kIj3AJZ5/Mnyy5iyjcsgnceM+SSV+APSTisjlFVH

# As a starting best practice always set the requests and limits memmory and CPU to the same thing.
coordinator:
  resources:
    requests:
      memory: "12Gi"
      cpu: 3
    limits:
      memory: "12Gi"

  # This affinity will ensure the coordinator and worker are deployed in the sep node group.
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: apps
            operator: In
            values: 
            - sep

# The tollerance in this YAML is specifically for Azure so it could be removed or commented out
#    for other clouds. However, it also won't hurt to leave since it is just saying to allow somethign
#    if a taint exists and when it doesn't the tollerance does nothing.
  tolerations:
    - key: "kubernetes.azure.com/scalesetpriority"
      operator: "Equal"
      value: "spot"
      effect: "NoSchedule"

  etcFiles:
    properties:
      access-control.properties: |
        access-control.name=ranger
        ranger.authentication-type=BASIC
        ranger.service-name=starburst-enterprise
        ranger.username=starburst_service
        ranger.policy-rest-url=http://ranger:6080
        ranger.kerberos-principal=sep-server/sep-server-node@
        ranger.kerberos-keytap=/etc/sep/conf/sep-server.keytab
        ranger.plugin-policy-ssl-config-file=/etc/hive/conf/ranger-polixymgr-ssl.xml
        ranger.password=St4rburstR0cks!
        ranger.policy-refresh-interval=10s
      log.properties: |
        io.trino=DEBUG
        org.apache.ranger=DEBUG
      #cache.properties: |
      #  service-database.user=postgres
      #  service-database.password=StarburstR0cks!
      #  service-database.jdbc-url=jdbc:postgresql://<your_dbs_endpoint>:5432/eks_redirections
      #  starburst.user=starburst_service
      #  starburst.password=
      #  starburst.jdbc-url=jdbc:trino://coordinator:8080
      #  rules.file=secretRef:cache-rules:cache-rules.json
      #  rules.refresh-period=1m
      #  refresh-initial-delay=1m
      #  refresh-interval=2m
  additionalProperties: |
    insights.persistence-enabled=true 
    insights.metrics-persistence-enabled=true
    insights.jdbc.url=jdbc:postgresql://joshua-fordyce-bootcamp.cs8j7iukogcy.us-east-2.rds.amazonaws.com:5432/eks_query_logger
    insights.jdbc.user=postgres
    insights.jdbc.password=StarburstR0cks!
    insights.authorized-users=starburst_service
  
expose:
  type: "loadBalancer"
  loadBalancer:
    name: "starburst"
    ports:
      http:
        port: 8080
# If you want the LB to have an internal IP and not a public facing one remove the comment below for the
#  annoticatios line and the line for your cloud.
#    annotations: 
#      service.beta.kubernetes.io/aws-load-balancer-internal: "true"
#      service.beta.kubernetes.io/azure-load-balancer-internal: "true"
#      networking.gke.io/load-balancer-type: "Internal"

worker:
  replicas: 1
  # The deploymentTerminatinoGracePeriodSeconds controls how long the worker waits before beginning the graceful shutdown process.
  # The following values were lowered from their defautls for lab settings so when you run a helm upgrade or scale down it doesn't take so long. 
  deploymentTerminationGracePeriodSeconds: 10 # default is 300; it is actually how long the graceful shutdown waits after it receives the SIGTERM
  starburstWorkerShutdownGracePeriodSeconds: 120 # default is 120
  resources:
    requests:
      memory: "12Gi"
      cpu: 3
    limits:
      memory: "12Gi"

  # This affinity will ensure the coordinator and worker are deployed in the sep node group.
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: apps
            operator: In
            values: 
            - sep

# The tollerance in this YAML is specifically for Azure so it could be removed or commented out
#    for other clouds. However, it also won't hurt to leave since it is just saying to allow somethign
#    if a taint exists and when it doesn't the tollerance does nothing.
  tolerations:
    - key: "kubernetes.azure.com/scalesetpriority"
      operator: "Equal"
      value: "spot"
      effect: "NoSchedule"
